const querystring = require('querystring');

function factory(clientId, api) {
  /**
   * Send alimtalk message
   *
   * @param {string} sender Sender's phone number
   * @param {string} receiver Phone number to receive
   * @param {string} message Alimtalk message to send (same content as the approved template)
   * @param {string} templateCode Template code of alimtalk message in apistore
   * @param {object} [options={}] Optional data
   * @param {string} [options.reqdate] Time to send message (yyyyMMddHHmmss, if not sent immediately)
   * @param {string} [options.failedType] Message type (SMS, LMS, N (do not send)) to be sent when alimtalk fails
   * @param {string} [options.failedSubject] Message subject to be sent when alimtalk fails (only LMS)
   * @param {string} [options.failedMsg] Message to be sent when alimtalk fails
   * @param {string} [options.btnTypes] Alimtalk button type (웹링크, 앱링크 봇키워드, 메시지전달, 배송조회) (up to 5, comma separated, same type as the approved template)
   * @param {string} [options.btnTxts] Alimtalk button name (comma separated, same order as type, same name as the approved template)
   * @param {string} [options.btnUrls1] Alimtalk button link url (comma separated)
   * @param {string} [options.btnUrls2] (If there are two links on one button) Alimtalk button second link url (comma separated)
   */
  async function send(sender, receiver, message, templateCode, options = {}) {
    const url = `/1/msg/${clientId}`;
    const data = {
      callback: sender,
      phone: receiver,
      msg: message,
      template_code: templateCode,
      reqdate: options.reqdate || '',
      failed_type: options.failedType || 'N',
      failed_subject: options.failedSubject || '',
      failed_msg: options.failedMsg || '',
      btn_types: options.btnTypes || '',
      btn_txts: options.btnTxts || '',
      btn_urls1: options.btnUrls1 || '',
      btn_urls2: options.btnUrls2 || '',
    };

    const res = await api.post(url, querystring.stringify(data));
    return res.data;
  }

  /**
   * Results of sent alimtalk message
   *
   * @param {string} cmid Unique key of sended alimtalk message (generated by apistore)
   */
  async function send_result(cmid) {
    const url = `/1/report/${clientId}?cmid=${cmid}`;

    const res = await api.get(url);
    return res.data;
  }

  /**
   * Approved alimtalk template list
   */
  async function template_list() {
    const url = `/1/template/list/${clientId}`;

    const res = await api.get(url);
    return res.data;
  }

  return {
    send,
    send_result,
    template_list,
  };
}

module.exports = factory;
